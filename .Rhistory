geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 2, xmax = 2.75, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -2, xmax = -1.25, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = -.5, xmax = .25, ymin = -4, ymax = -3.25) +
coord_cartesian(clip="off")
+
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 5, transition_length = 1) +
enter_fade()+
exit_fade()
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 2, xmax = 2.75, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -2, xmax = -1.25, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = -.5, xmax = .25, ymin = -4, ymax = -3.25) +
coord_cartesian(clip="off")
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 2, xmax = 2.75, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -2, xmax = -1.25, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = -.5, xmax = .25, ymin = -4, ymax = -3.25) +
coord_cartesian(clip="off")
+
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile")
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 2, xmax = 2.75, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -2, xmax = -1.25, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = -.5, xmax = .25, ymin = -4, ymax = -3.25) +
coord_cartesian(clip="off") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile")
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 2, xmax = 2.75, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -2, xmax = -1.25, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = -.5, xmax = .25, ymin = -4, ymax = -3.25) +
coord_cartesian(clip="off") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 5, transition_length = 1) +
enter_fade()+
exit_fade()
tina_tom_jordan <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 2, xmax = 2.75, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -2, xmax = -1.25, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = -.5, xmax = .25, ymin = -4, ymax = -3.25) +
coord_cartesian(clip="off") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 5, transition_length = 1) +
enter_fade()+
exit_fade()
tina_tom_jordan <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 2, xmax = 2.75, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -2, xmax = -1.25, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = -.5, xmax = .25, ymin = -4, ymax = -3.25) +
coord_cartesian(clip="off") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 5, transition_length = 1) +
enter_fade()+
exit_fade()
animate(tina_tom_jordan, fps = 5)
tina_tom_jordan <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 2, xmax = 2.75, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -2, xmax = -1.25, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = -.5, xmax = .25, ymin = -4, ymax = -3.25) +
coord_cartesian(clip="off") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 5, transition_length = 1) +
enter_fade()+
exit_fade()
animate(tina_tom_jordan, fps = 5)
anim_save(filename="tina_tom_jordan.gif")
# Install packages -------------------------------------------------------------
rm(list=ls())
packages <- c("devtools", "Rcpp", "ggplot2", "gganimate", "gapminder", "dplyr",
"installr", "animation", "tweenr", "ggforce", "plotly", "tidyr",
"MASS", "bindata", "gifski", "png", "transformr", "grid", "magick",
"gridExtra", "knitr", "shiny", "RCurl", "magrittr", "png", "readPNG")
lapply(packages, require, character.only = TRUE)
# Assign path to repo and import icons -----------------------------------------
work <- getwd
gitpath <- paste0(work, "/GitHub/Animated-GM")
# Assign path to repo and import icons -----------------------------------------
work <- getwd()
work
# Assign path to repo and import icons -----------------------------------------
work <- paste0(getwd())
gitpath <- paste0(work, "/GitHub/Animated-GM")
gitpath
jordanPNG <- readPNG(file.path(gitpath, "/studentjordan_64bit.png"))
jordanPNG <- readPNG(file.path(gitpath), "/studentjordan_64bit.png")
# Assign path to repo and import icons -----------------------------------------
work <- paste0(getwd())
gitpath <- paste0(work, "/GitHub/Animated-GM")
jordanPNG <- readPNG(paste0(file.path(gitpath, "/studentjordan_64bit.png")))
jordanPNG <- readPNG(paste0(file.path(gitpath, "studentjordan_64bit.png")))
work
jordanPNG <- readPNG(file.path(gitpath, "studentjordan_64bit.png"))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Install packages -------------------------------------------------------------
rm(list=ls())
packages <- c("devtools", "Rcpp", "ggplot2", "gganimate", "gapminder", "dplyr",
"installr", "animation", "tweenr", "ggforce", "plotly", "tidyr",
"MASS", "bindata", "gifski", "png", "transformr", "grid", "magick",
"gridExtra", "knitr", "shiny", "RCurl", "magrittr", "png", "readPNG")
lapply(packages, require, character.only = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
install.packages("rstudioapi")
install.packages("rstudioapi")
current_path <- getActiveDocumentContext()$path
require("rstudioapi")
current_path <- getActiveDocumentContext()$path
current_path
setwd(dirname(current_path ))
# From GitHub
require("RCurl")
inputscript <-
getURL("https://raw.githubusercontent.com/doobops/Animated-GM/master/Inputs.R", ssl.verifypeer = FALSE)
eval(parse(text = inputscript))
# Connect to Repo
current_path <- gsub(x = paste0(getSourceEditorContext()$path), pattern = "/GM-Animated.R", "")
setwd(file.path(current_path))
getwd()
# Import images
jordanPNG <- readPNG("studentjordan_64bit.png")
tomPNG <- readPNG("studenttom_64bit.png")
tinaPNG <- readPNG("studenttina_64bit.png")
# Image Grobs
jordanGrob <- rasterGrob(jordanPNG, interpolate = TRUE)
tomGrob <- rasterGrob(tomPNG, interpolate = TRUE)
tinaGrob <- rasterGrob(tinaPNG, interpolate = TRUE)
# Annotation Grobs
yhat_jordan_grob <- textGrob(paste(yhat_jordan),
gp = gpar(fontsize = 12, fontface = "bold", col = SPED))
yhat_tom_grob <- textGrob(paste(yhat_tom),
gp = gpar(fontsize = 12, fontface = "bold", col = ELL))
yhat_tina_grob <- textGrob(paste(yhat_tina),
gp = gpar(fontsize = 12, fontface = "bold", col = None))
# Annotation for YAXIS
yaxisGrob <- textGrob(paste("Estimated \nEnd of \nYear Score"),
gp = gpar(fontface = "bold", col = "black"), just = c("left", "center"))
tina_tom_jordan <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
annotation_custom(yaxisGrob, xmin = -3.5, xmax = -3.5, ymin = yhat_tina+1, ymax = yhat_tina+1) +
geom_point(alpha = 0.25) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 1.625, xmax = 2.375, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -1.625, xmax = -2.375, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = 0.375, xmax = -0.375, ymin = -4, ymax = -3.25) +
annotate("segment", x = jordanpre, xend = jordanpre, y = -3.25 , yend = yhat_jordan, color = SPED,
size = 1, linetype = 2) +
annotate("segment", x = jordanpre, xend = -3, y = yhat_jordan, yend = yhat_jordan, color = SPED,
size = 1, linetype = 2, arrow=arrow(length=unit(0.4,"cm"))) +
annotation_custom(yhat_jordan_grob, xmin = -3.25, xmax = -3.25, ymin = yhat_jordan, ymax = yhat_jordan+.3) +
annotate("segment", x = tompre, xend = tompre, y = -3.25 , yend = yhat_tom, color = ELL,
size = 1, linetype = 2) +
annotate("segment", x = tompre, xend = -3, y = yhat_tom, yend = yhat_tom, color = ELL,
size = 1, linetype = 2, arrow=arrow(length=unit(0.4,"cm"))) +
annotation_custom(yhat_tom_grob, xmin = -3.25, xmax = -3.25, ymin = yhat_tom, ymax = yhat_tom+.3) +
annotate("segment", x = tinapre, xend = tinapre, y = -3.25 , yend = yhat_tina, color = None,
size = 1, linetype = 2) +
annotate("segment", x = tinapre, xend = -3, y = yhat_tina, yend = yhat_tina, color = None,
size = 1, linetype = 2, arrow=arrow(length=unit(0.4,"cm"))) +
annotation_custom(yhat_tina_grob, xmin = -3.25, xmax = -3.25, ymin = yhat_tina, ymax = yhat_tina+.3) +
coord_cartesian(clip="off") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = " ",
color = "Student Profile") +
lims(x = c(-3, 3),
y = c(-4, 4)) +
mytheme +
theme(axis.text.y = element_blank(),
axis.line = element_line(color = "grey77")) +
transition_layers(layer_length = 5, transition_length = 1, from_blank = FALSE) +
enter_fade()+
exit_fade()
animate(tina_tom_jordan, fps = 1)
animate(tina_tom_jordan)
tina_tom_jordan <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
annotation_custom(yaxisGrob, xmin = -3.5, xmax = -3.5, ymin = yhat_tina+1, ymax = yhat_tina+1) +
geom_point(alpha = 0.25) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 1.625, xmax = 2.375, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -1.625, xmax = -2.375, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = 0.375, xmax = -0.375, ymin = -4, ymax = -3.25) +
annotate("segment", x = jordanpre, xend = jordanpre, y = -3.25 , yend = yhat_jordan, color = SPED,
size = 1, linetype = 2) +
annotate("segment", x = jordanpre, xend = -3, y = yhat_jordan, yend = yhat_jordan, color = SPED,
size = 1, linetype = 2, arrow=arrow(length=unit(0.4,"cm"))) +
annotation_custom(yhat_jordan_grob, xmin = -3.25, xmax = -3.25, ymin = yhat_jordan, ymax = yhat_jordan+.3) +
annotate("segment", x = tompre, xend = tompre, y = -3.25 , yend = yhat_tom, color = ELL,
size = 1, linetype = 2) +
annotate("segment", x = tompre, xend = -3, y = yhat_tom, yend = yhat_tom, color = ELL,
size = 1, linetype = 2, arrow=arrow(length=unit(0.4,"cm"))) +
annotation_custom(yhat_tom_grob, xmin = -3.25, xmax = -3.25, ymin = yhat_tom, ymax = yhat_tom+.3) +
annotate("segment", x = tinapre, xend = tinapre, y = -3.25 , yend = yhat_tina, color = None,
size = 1, linetype = 2) +
annotate("segment", x = tinapre, xend = -3, y = yhat_tina, yend = yhat_tina, color = None,
size = 1, linetype = 2, arrow=arrow(length=unit(0.4,"cm"))) +
annotation_custom(yhat_tina_grob, xmin = -3.25, xmax = -3.25, ymin = yhat_tina, ymax = yhat_tina+.3) +
coord_cartesian(clip="off") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = " ",
color = "Student Profile") +
lims(x = c(-3, 3),
y = c(-4, 4)) +
mytheme +
theme(axis.text.y = element_blank(),
axis.line = element_line(color = "grey77")) +
transition_layers(layer_length = 3, transition_length = 1, from_blank = FALSE) +
enter_fade()+
exit_fade()
animate(tina_tom_jordan, fps = 2)
tina_tom_jordan <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
annotation_custom(yaxisGrob, xmin = -3.5, xmax = -3.5, ymin = yhat_tina+1, ymax = yhat_tina+1) +
geom_point(alpha = 0.25) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(jordanGrob, xmin = 1.625, xmax = 2.375, ymin = -4, ymax = -3.25) +
annotation_custom(tomGrob, xmin = -1.625, xmax = -2.375, ymin = -4, ymax = -3.25) +
annotation_custom(tinaGrob, xmin = 0.375, xmax = -0.375, ymin = -4, ymax = -3.25) +
annotate("segment", x = jordanpre, xend = jordanpre, y = -3.25 , yend = yhat_jordan, color = SPED,
size = 1, linetype = 2) +
annotate("segment", x = jordanpre, xend = -3, y = yhat_jordan, yend = yhat_jordan, color = SPED,
size = 1, linetype = 2, arrow=arrow(length=unit(0.4,"cm"))) +
annotation_custom(yhat_jordan_grob, xmin = -3.25, xmax = -3.25, ymin = yhat_jordan, ymax = yhat_jordan+.3) +
annotate("segment", x = tompre, xend = tompre, y = -3.25 , yend = yhat_tom, color = ELL,
size = 1, linetype = 2) +
annotate("segment", x = tompre, xend = -3, y = yhat_tom, yend = yhat_tom, color = ELL,
size = 1, linetype = 2, arrow=arrow(length=unit(0.4,"cm"))) +
annotation_custom(yhat_tom_grob, xmin = -3.25, xmax = -3.25, ymin = yhat_tom, ymax = yhat_tom+.3) +
annotate("segment", x = tinapre, xend = tinapre, y = -3.25 , yend = yhat_tina, color = None,
size = 1, linetype = 2) +
annotate("segment", x = tinapre, xend = -3, y = yhat_tina, yend = yhat_tina, color = None,
size = 1, linetype = 2, arrow=arrow(length=unit(0.4,"cm"))) +
annotation_custom(yhat_tina_grob, xmin = -3.25, xmax = -3.25, ymin = yhat_tina, ymax = yhat_tina+.3) +
coord_cartesian(clip="off") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = " ",
color = "Student Profile") +
lims(x = c(-3, 3),
y = c(-4, 4)) +
mytheme +
theme(axis.text.y = element_blank(),
axis.line = element_line(color = "grey77")) +
transition_layers(layer_length = 1.5, transition_length = 1, from_blank = FALSE) +
enter_fade()+
exit_fade()
animate(tina_tom_jordan)
anim_save(filename="tina_tom_jordan.gif")
# Grobs for explanation
note1 <- textGrob(paste("This line represents the relationship between \nprior achievement and end of year scores for \nstudents with no particular needs"),
gp = gpar(fontsize = 9, fontface = "bold", col = None), just=c("left", "bottom"))
note2 <- textGrob(paste("This line represents the relationship between \nprior achievement and end of year scores for \nELL students"),
gp = gpar(fontsize = 9, fontface = "bold", col = ELL), just=c("left", "bottom"))
note3 <- textGrob(paste("This line represents the relationship between \nprior achievement and end of year scores for \nSPED students"),
gp = gpar(fontsize = 9, fontface = "bold", col = SPED), just=c("left", "bottom"))
note4 <- textGrob(paste("This line represents the relationship between \nprior achievement and end of year scores for \nstudents who are both ELL and SPED"),
gp = gpar(fontsize = 9, fontface = "bold", col = Both), just=c("left", "bottom"))
# Plot
reg_bysub <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
annotation_custom(note1, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
annotation_custom(note2, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
annotation_custom(note3, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(note4, xmin = -3.25, xmax = -3.253, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 2, transition_length = 1,
# from_blank = TRUE, keep_layers = c(rep(c(2, 1, 1, 1), 4))) +
from_blank = TRUE, keep_layers = c(rep(c(3, 2, 1, 1), 4))) +
enter_fade()+
exit_fade()
animate(reg_bysub, fps = 1)
reg_bysub <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
annotation_custom(note1, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
annotation_custom(note2, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
annotation_custom(note3, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(note4, xmin = -3.25, xmax = -3.253, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 4, transition_length = 1,
# from_blank = TRUE, keep_layers = c(rep(c(2, 1, 1, 1), 4))) +
from_blank = TRUE, keep_layers = c(rep(c(3, 2, 1, 1), 4))) +
enter_fade()+
exit_fade()
reg_bysub <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
annotation_custom(note1, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
annotation_custom(note2, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
annotation_custom(note3, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(note4, xmin = -3.25, xmax = -3.253, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 2, transition_length = 1,
# from_blank = TRUE, keep_layers = c(rep(c(2, 1, 1, 1), 4))) +
from_blank = TRUE, keep_layers = c(rep(c(3, 2, 1, 1), 4))) +
enter_fade()+
exit_fade()
animate(reg_bysub, fps = 5)
reg_bysub <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
annotation_custom(note1, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
annotation_custom(note2, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
annotation_custom(note3, xmin = -3.25, xmax = -3.25, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(note4, xmin = -3.25, xmax = -3.253, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 2, transition_length = .5,
# from_blank = TRUE, keep_layers = c(rep(c(2, 1, 1, 1), 4))) +
from_blank = TRUE, keep_layers = c(rep(c(3, 2, 1, 1), 4))) +
enter_fade()+
exit_fade()
animate(reg_bysub, fps = 5)
reg_bysub <-
ggplot(train, aes(x = pretest, y = posttest, color = subgroup)) +
geom_point(data = train[train$subgroup=="None", ], alpha = .75) +
geom_abline(intercept = yint.none, slope = beta, color = None, size = 1) +
annotation_custom(note1, xmin = -3, xmax = -3, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="ELL", ], alpha = .75) +
geom_abline(intercept = yint.ell, slope = beta, color = ELL, size = 1) +
annotation_custom(note2, xmin = -3, xmax = -3, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="SPED", ], alpha = .75) +
geom_abline(intercept = yint.sped, slope = beta, color = SPED, size = 1) +
annotation_custom(note3, xmin = -3, xmax = -3, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
geom_point(data = train[train$subgroup=="Both", ], alpha = .75) +
geom_abline(intercept = yint.both, slope = beta, color = Both, size = 1) +
annotation_custom(note4, xmin = -3, xmax = -3, ymin = 2.5, ymax = 2.5) +
geom_point(x=0, y=0, color = "white") +
scale_colour_manual(breaks = c("None", "ELL", "SPED", "Both"), values = mycolors) +
labs(x = "Prior Achievement Score",
y = "End of Year Score",
color = "Student Profile") +
mytheme +
transition_layers(layer_length = 2, transition_length = .5,
# from_blank = TRUE, keep_layers = c(rep(c(2, 1, 1, 1), 4))) +
from_blank = TRUE, keep_layers = c(rep(c(3, 2, 1, 1), 4))) +
enter_fade()+
exit_fade()
animate(reg_bysub, fps = 5)
anim_save(filename="intercept_shift.gif")
ggplot(data=df, aes(x = pretest, y = posttest)) +
geom_point()
ggplot(df, aes(x = pretest, y = posttest)) +
geom_point()
ggplot(data = train, aes(x = 0, y = 0), color = "white", fill = "white") +
geom_point()
ggplot(data=train, aes(x = 0, y = 0), color = "white", fill = "white") +
geom_point()
